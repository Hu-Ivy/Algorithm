#include <stdio.h>
#include <stdlib.h>
#define ElementType int;
#define MAXSIZE 100;
typedef struct TreeNode *BinTree;
struct TreeNode
{
    ElementType Data;
    BinTree Left;
    BinTree right;
};
void InOrdertraversalï¼ˆBinTree BT)
{
    BinTree T;
    T=BT;
    Stack S=CreateStack(MAXSIZE);
    while(T||IsEmpty(S))
    {
        while(T)
        {
            Push(S,T);
            T=T->Left;
        }
        if(!IsEmpty(S))
        {
           T= Pop(S);
           printf("%5d",T->Data);
           T=T->right;
        }

    }
}
void PreOrderTraversal(BinTree BT)
{
    BinTree T;
    T=BT;
    Stack S=CreateStack(MAXSIZE);
    while(T||IsEmpty(S))
    {
        while(T)
        {
            printf("%5d",T->Data);
            Push(S,T);
            T=T->Left;
        }
        if(!IsEmpty(S))
        {
           T= Pop(S);

           T=T->right;
        }

    }
}
void PostOrderTraversal(BinTree BT)
{
    Bintree pre=BT;
    BinTree T;
    T=BT;
    Stack S=CreateStack(MAXSIZE);
    while(T||IsEmpty(S))
    {
        while(T)
        {
            Push(S,T);
            T=T->Left;
        }
        if(!IsEmpty(S))
        {

            T= Pop(S);
            if(T->right==NULL||pre==T->right)
            {
                printf("%5d",T->Data);
                pre=T;
            }
            else
            {
                Push(S,T);
                T=T->right;
            }

        }

    }
}
